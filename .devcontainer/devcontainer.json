{
	"name": "Existing Dockerfile",
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	"workspaceFolder": "/home/node/app",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",
	// Set *default* container specific settings.json values on container create.
	"settings": {
	  "terminal.integrated.shell.linux": "/bin/bash",
	  "editor.defaultFormatter": "esbenp.prettier-vscode",
	  "[typescript]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	  },
	  "editor.FormatOnSave": true
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": ["dbaeumer.vscode-eslint", "esbenp.prettier-vscode"],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [3000],
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "apt-get update && apt-get install -y curl git",
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	"mounts": ["src=${localWorkspaceFolder},target=/home/node/app,type=bind"],
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node"
  }
  